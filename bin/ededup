#!/bin/sh

jscpd --ignore "**/*.min.js,**/*.map,./node_modules/**,./dist/**" --reporters html --silent --output dedup-report "$@"

echo " \
    function docReady(fn) { \
        // see if DOM is already available \
        if (document.readyState === "complete" || document.readyState === "interactive") { \
            // call on next available tick \
            setTimeout(fn, 1); \
        } else { \
            document.addEventListener("DOMContentLoaded", fn); \
        } \
    } \
    var codeLinesRegex = /\[([0-9]+).[0-9]+\s.\s([0-9]+).[0-9]+\].+\[([0-9]+).[0-9]+\s.\s([0-9]+).[0-9]+\]/gm; \
    docReady(function() { \
        var nodes = document.querySelectorAll('.clone-title'); \
        for(var nodei in nodes) { \
            var node = nodes[nodei]; \
            var match = codeLinesRegex.exec(node.innerHTML); \
            if(match && match[1] && match[4]) { \
                var codeLinesAmount1 = Math.abs(match[2] - match[1]); \
                var codeLinesAmount2 = Math.abs(match[4] - match[3]); \
                var codeLinesAmount = (codeLinesAmount1 + codeLinesAmount2) / 2; \
                node.innerHTML = node.innerHTML + '<br/> - ' + codeLinesAmount + ' lines of code duplicated'; \
            } \
        } \
    }); \
" > ./dedup-report/jscpd-report.js
echo "<script type=\"text/javascript\" src=\"./jscpd-report.js\"></script> " >> ./dedup-report/jscpd-report.html


start ./dedup-report/jscpd-report.html || ./dedup-report/jscpd-report.html || (alias chrome="open -a \"Google Chrome\"" && chrome ./dedup-report/jscpd-report.html) || open ./dedup-report/jscpd-report.html || xdg-open ./dedup-report/jscpd-report.html || cygstart ./dedup-report/jscpd-report.html || kfmclient exec ./dedup-report/jscpd-report.html || dolphin ./dedup-report/jscpd-report.html

ret=$?
exit $ret
